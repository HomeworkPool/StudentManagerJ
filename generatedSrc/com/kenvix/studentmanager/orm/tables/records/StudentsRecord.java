/*
 * This file is generated by jOOQ.
 */
package com.kenvix.studentmanager.orm.tables.records;


import com.kenvix.studentmanager.orm.enums.StudentsStatus;
import com.kenvix.studentmanager.orm.tables.Students;
import com.kenvix.studentmanager.orm.tables.interfaces.IStudents;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * View 'student_manager.people_student' references invalid table(s) or column(s) 
 * or function(s) or definer/invoker of view lack rights to use them
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> implements Record3<Long, Byte, StudentsStatus>, IStudents {

    private static final long serialVersionUID = 676605714;

    /**
     * Setter for <code>students.person_id</code>.
     */
    @Override
    public StudentsRecord setPersonId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>students.person_id</code>.
     */
    @Override
    public Long getPersonId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>students.is_graduable</code>.
     */
    @Override
    public StudentsRecord setIsGraduable(Byte value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>students.is_graduable</code>.
     */
    @Override
    public Byte getIsGraduable() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>students.status</code>.
     */
    @Override
    public StudentsRecord setStatus(StudentsStatus value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>students.status</code>.
     */
    @Override
    public StudentsStatus getStatus() {
        return (StudentsStatus) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Byte, StudentsStatus> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Byte, StudentsStatus> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Students.STUDENTS.PERSON_ID;
    }

    @Override
    public Field<Byte> field2() {
        return Students.STUDENTS.IS_GRADUABLE;
    }

    @Override
    public Field<StudentsStatus> field3() {
        return Students.STUDENTS.STATUS;
    }

    @Override
    public Long component1() {
        return getPersonId();
    }

    @Override
    public Byte component2() {
        return getIsGraduable();
    }

    @Override
    public StudentsStatus component3() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getPersonId();
    }

    @Override
    public Byte value2() {
        return getIsGraduable();
    }

    @Override
    public StudentsStatus value3() {
        return getStatus();
    }

    @Override
    public StudentsRecord value1(Long value) {
        setPersonId(value);
        return this;
    }

    @Override
    public StudentsRecord value2(Byte value) {
        setIsGraduable(value);
        return this;
    }

    @Override
    public StudentsRecord value3(StudentsStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public StudentsRecord values(Long value1, Byte value2, StudentsStatus value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IStudents from) {
        setPersonId(from.getPersonId());
        setIsGraduable(from.getIsGraduable());
        setStatus(from.getStatus());
    }

    @Override
    public <E extends IStudents> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(Long personId, Byte isGraduable, StudentsStatus status) {
        super(Students.STUDENTS);

        set(0, personId);
        set(1, isGraduable);
        set(2, status);
    }
}
