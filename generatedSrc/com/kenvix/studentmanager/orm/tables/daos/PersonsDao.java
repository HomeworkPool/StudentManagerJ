/*
 * This file is generated by jOOQ.
 */
package com.kenvix.studentmanager.orm.tables.daos;


import com.kenvix.studentmanager.orm.enums.PersonsSex;
import com.kenvix.studentmanager.orm.enums.PersonsStatus;
import com.kenvix.studentmanager.orm.enums.PersonsType;
import com.kenvix.studentmanager.orm.tables.Persons;
import com.kenvix.studentmanager.orm.tables.records.PersonsRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * View 'student_manager.people_student' references invalid table(s) or column(s) 
 * or function(s) or definer/invoker of view lack rights to use them
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonsDao extends DAOImpl<PersonsRecord, com.kenvix.studentmanager.orm.tables.pojos.Persons, Long> {

    /**
     * Create a new PersonsDao without any configuration
     */
    public PersonsDao() {
        super(Persons.PERSONS, com.kenvix.studentmanager.orm.tables.pojos.Persons.class);
    }

    /**
     * Create a new PersonsDao with an attached configuration
     */
    public PersonsDao(Configuration configuration) {
        super(Persons.PERSONS, com.kenvix.studentmanager.orm.tables.pojos.Persons.class, configuration);
    }

    @Override
    public Long getId(com.kenvix.studentmanager.orm.tables.pojos.Persons object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Persons.PERSONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchById(Long... values) {
        return fetch(Persons.PERSONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.kenvix.studentmanager.orm.tables.pojos.Persons fetchOneById(Long value) {
        return fetchOne(Persons.PERSONS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchByName(String... values) {
        return fetch(Persons.PERSONS.NAME, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfSex(PersonsSex lowerInclusive, PersonsSex upperInclusive) {
        return fetchRange(Persons.PERSONS.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchBySex(PersonsSex... values) {
        return fetch(Persons.PERSONS.SEX, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfType(PersonsType lowerInclusive, PersonsType upperInclusive) {
        return fetchRange(Persons.PERSONS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchByType(PersonsType... values) {
        return fetch(Persons.PERSONS.TYPE, values);
    }

    /**
     * Fetch records that have <code>is_graduable BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfIsGraduable(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Persons.PERSONS.IS_GRADUABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_graduable IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchByIsGraduable(Byte... values) {
        return fetch(Persons.PERSONS.IS_GRADUABLE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfStatus(PersonsStatus lowerInclusive, PersonsStatus upperInclusive) {
        return fetchRange(Persons.PERSONS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchByStatus(PersonsStatus... values) {
        return fetch(Persons.PERSONS.STATUS, values);
    }

    /**
     * Fetch records that have <code>clazz BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchRangeOfClazz(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Persons.PERSONS.CLAZZ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>clazz IN (values)</code>
     */
    public List<com.kenvix.studentmanager.orm.tables.pojos.Persons> fetchByClazz(Long... values) {
        return fetch(Persons.PERSONS.CLAZZ, values);
    }
}
