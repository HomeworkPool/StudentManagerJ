/*
 * This file is generated by jOOQ.
 */
package com.kenvix.studentmanager.orm.tables.pojos;


import com.kenvix.studentmanager.orm.enums.PersonsSex;
import com.kenvix.studentmanager.orm.enums.PersonsType;
import com.kenvix.studentmanager.orm.tables.interfaces.IPersons;

import javax.annotation.processing.Generated;


/**
 * View 'student_manager.people_student' references invalid table(s) or column(s) 
 * or function(s) or definer/invoker of view lack rights to use them
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Persons implements IPersons {

    private static final long serialVersionUID = -2011247099;

    private Long        id;
    private String      name;
    private PersonsSex  sex;
    private PersonsType type;

    public Persons() {}

    public Persons(IPersons value) {
        this.id = value.getId();
        this.name = value.getName();
        this.sex = value.getSex();
        this.type = value.getType();
    }

    public Persons(
        Long        id,
        String      name,
        PersonsSex  sex,
        PersonsType type
    ) {
        this.id = id;
        this.name = name;
        this.sex = sex;
        this.type = type;
    }

    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public Persons setId(Long id) {
        this.id = id;
        return this;
    }

    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public Persons setName(String name) {
        this.name = name;
        return this;
    }

    @Override
    public PersonsSex getSex() {
        return this.sex;
    }

    @Override
    public Persons setSex(PersonsSex sex) {
        this.sex = sex;
        return this;
    }

    @Override
    public PersonsType getType() {
        return this.type;
    }

    @Override
    public Persons setType(PersonsType type) {
        this.type = type;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Persons (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(sex);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPersons from) {
        setId(from.getId());
        setName(from.getName());
        setSex(from.getSex());
        setType(from.getType());
    }

    @Override
    public <E extends IPersons> E into(E into) {
        into.from(this);
        return into;
    }
}
